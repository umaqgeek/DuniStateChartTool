/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DictionaryController;
import controllers.FMController;
import controllers.MatchController;
import controllers.UMLController;
import helpers.Func;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author umarmukhtar
 */
public class MainPage extends javax.swing.JFrame {
    
    public static JFileChooser jfc;
    public static String FileUML;
    public static String FileFM;
    public static String FileDict;

    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
        
        initPage();
    }
    
    public static void initPage() {
        jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        btnChooseFm.setEnabled(false);
        btnTraceState.setEnabled(false);
        btnTraceTransition.setEnabled(false);
        btnViewUml.setEnabled(false);
        btnViewFm.setEnabled(false);
    }
    
    public static void clearTable() {
        DefaultTableModel model = new DefaultTableModel();
        tblList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnChooseUml = new javax.swing.JButton();
        btnChooseFm = new javax.swing.JButton();
        btnTraceState = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        btnQuit = new javax.swing.JButton();
        btnViewUml = new javax.swing.JButton();
        btnViewFm = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        btnTraceTransition = new javax.swing.JButton();
        btnChooseDict = new javax.swing.JButton();
        btnClearDict = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Feature Model State Chart Tool");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FM State Chart Tool");

        btnChooseUml.setText("Import State");
        btnChooseUml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseUmlActionPerformed(evt);
            }
        });

        btnChooseFm.setText("Import FM");
        btnChooseFm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFmActionPerformed(evt);
            }
        });

        btnTraceState.setText("Trace State");
        btnTraceState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraceStateActionPerformed(evt);
            }
        });

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Name", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblList);

        btnQuit.setText("Quit");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        btnViewUml.setText("View State");
        btnViewUml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUmlActionPerformed(evt);
            }
        });

        btnViewFm.setText("View FM");
        btnViewFm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFmActionPerformed(evt);
            }
        });

        lblTitle.setText("- Title -");

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnTraceTransition.setText("Trace Transition");
        btnTraceTransition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraceTransitionActionPerformed(evt);
            }
        });

        btnChooseDict.setText("Import Dictionary");
        btnChooseDict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseDictActionPerformed(evt);
            }
        });

        btnClearDict.setText("Clear Dictionary");
        btnClearDict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearDictActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnViewUml, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewFm, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearDict, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTraceState, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTraceTransition, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnChooseUml, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChooseFm, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChooseDict, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChooseUml, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseFm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraceState, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseDict, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewUml, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewFm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraceTransition, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearDict, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseUmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseUmlActionPerformed
        // TODO add your handling code here:
        btnChooseFm.setEnabled(false);
        btnTraceState.setEnabled(false);
        btnTraceTransition.setEnabled(false);
        btnViewUml.setEnabled(false);
        btnViewFm.setEnabled(false);
        lblTitle.setText("View STATEs and TRANSITIONs");
        UMLController.dataList.removeAll(UMLController.dataList);
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());
            
            boolean status = UMLController.setData(selectedFile.getAbsolutePath());
            if (status == true && UMLController.dataList.size() > 0) {
                FileUML = selectedFile.getAbsolutePath();
                btnChooseFm.setEnabled(true);
                btnTraceState.setEnabled(true);
                btnTraceTransition.setEnabled(true);
                btnViewUml.setEnabled(true);
                btnViewFm.setEnabled(true);
            } else {
                FileUML = "";
                btnChooseFm.setEnabled(false);
                btnTraceState.setEnabled(false);
                btnTraceTransition.setEnabled(false);
                btnViewUml.setEnabled(false);
                btnViewFm.setEnabled(false);
                JOptionPane.showMessageDialog(null, "No state model selected!", "No State Model", 0);
            }
        }
    }//GEN-LAST:event_btnChooseUmlActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnQuitActionPerformed

    private void btnViewUmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUmlActionPerformed
        // TODO add your handling code here:
        btnTraceState.setEnabled(false);
        btnTraceTransition.setEnabled(false);
        btnChooseFm.setEnabled(false);
        lblTitle.setText("View STATEs and TRANSITIONs");
        UMLController.dataList.removeAll(UMLController.dataList);
        if (FileUML != null && FileUML.length() > 0) {
            boolean status = UMLController.setData(FileUML);
            if (status == true && UMLController.dataList.size() > 0) {
                btnChooseFm.setEnabled(true);
                btnTraceState.setEnabled(true);
                btnTraceTransition.setEnabled(true);
            } else {
                FileUML = "";
                btnChooseFm.setEnabled(false);
                btnTraceState.setEnabled(false);
                btnTraceTransition.setEnabled(false);
                JOptionPane.showMessageDialog(null, "No state model selected!", "No State Model", 0);
            }
        }
    }//GEN-LAST:event_btnViewUmlActionPerformed

    private void btnChooseFmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFmActionPerformed
        // TODO add your handling code here:
        btnTraceState.setEnabled(false);
        btnTraceTransition.setEnabled(false);
        btnViewFm.setEnabled(false);
        lblTitle.setText("View FEATURE MODELs");
        FMController.dataList.removeAll(FMController.dataList);
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());

            boolean status = FMController.setData(selectedFile.getAbsolutePath());
            if (status == true && FMController.dataList.size() > 0) {
                FileFM = selectedFile.getAbsolutePath();
                btnTraceState.setEnabled(true);
                btnTraceTransition.setEnabled(true);
                btnViewFm.setEnabled(true);
            } else {
                FileUML = "";
                btnTraceState.setEnabled(false);
                btnTraceTransition.setEnabled(false);
                btnViewFm.setEnabled(false);
                JOptionPane.showMessageDialog(null, "No feature model selected!", "No Feature Model", 0);
            }
        }
    }//GEN-LAST:event_btnChooseFmActionPerformed

    private void btnTraceStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraceStateActionPerformed
        // TODO add your handling code here:
        lblTitle.setText("View MATCHED Features (STATE)");
        MatchController.dataList.removeAll(MatchController.dataList);
        if (FileFM == null || FileFM.length() <= 0 || FMController.dataList.size() <= 0) {
            JOptionPane.showMessageDialog(null, "No feature model selected!", "No Feature Model", 0);
        } else if (FileUML == null || FileUML.length() <= 0 || UMLController.dataList.size() <= 0) {
            JOptionPane.showMessageDialog(null, "No state model selected!", "No State Model", 0);
        } else {
            boolean status = MatchController.setMatch("STATE");
            if (status == true) {
            } else {
                clearTable();
                JOptionPane.showMessageDialog(null, "No model matched!", "No Model Matched", 0);
            }
        }
    }//GEN-LAST:event_btnTraceStateActionPerformed

    private void btnViewFmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFmActionPerformed
        // TODO add your handling code here:
        btnTraceState.setEnabled(false);
        btnTraceTransition.setEnabled(false);
        lblTitle.setText("View FEATURE MODELs");
        FMController.dataList.removeAll(FMController.dataList);
        if (FileFM != null && FileFM.length() > 0) {
            boolean status = FMController.setData(FileFM);
            if (status == true && FMController.dataList.size() > 0) {
                btnTraceState.setEnabled(true);
                btnTraceTransition.setEnabled(true);
            } else {
                FileFM = "";
                btnTraceState.setEnabled(false);
                btnTraceTransition.setEnabled(false);
                JOptionPane.showMessageDialog(null, "No feature model selected!", "No Feature Model", 0);
            }
        }
    }//GEN-LAST:event_btnViewFmActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        Func.setPrint();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnTraceTransitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraceTransitionActionPerformed
        // TODO add your handling code here:
        lblTitle.setText("View MATCHED Features (TRANSITION)");
        MatchController.dataList.removeAll(MatchController.dataList);
        if (FileFM == null || FileFM.length() <= 0 || FMController.dataList.size() <= 0) {
            JOptionPane.showMessageDialog(null, "No feature model selected!", "No Feature Model", 0);
        } else if (FileUML == null || FileUML.length() <= 0 || UMLController.dataList.size() <= 0) {
            JOptionPane.showMessageDialog(null, "No state model selected!", "No State Model", 0);
        } else {
            boolean status = MatchController.setMatch("TRANSITION");
            if (status == true) {
            } else {
                clearTable();
                JOptionPane.showMessageDialog(null, "No model matched!", "No Model Matched", 0);
            }
        }
    }//GEN-LAST:event_btnTraceTransitionActionPerformed

    private void btnChooseDictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseDictActionPerformed
        // TODO add your handling code here:
        lblTitle.setText("View DICTIONARY");
        DictionaryController.dataList.removeAll(DictionaryController.dataList);
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());

            boolean status = DictionaryController.setData(selectedFile.getAbsolutePath());
            if (status == true && DictionaryController.dataList.size() > 0) {
                FileDict = selectedFile.getAbsolutePath();
            } else {
                FileDict = "";
                JOptionPane.showMessageDialog(null, "No dictionary selected!", "No Dictionary", 0);
            }
        }
    }//GEN-LAST:event_btnChooseDictActionPerformed

    private void btnClearDictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearDictActionPerformed
        // TODO add your handling code here:
        boolean status = DictionaryController.clearData();
        if (status == false || DictionaryController.dataList.size() > 0) {
            JOptionPane.showMessageDialog(null, "Cannot delete dictionary!", "Clear Dictionary", 0);
        }
    }//GEN-LAST:event_btnClearDictActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnChooseDict;
    public static javax.swing.JButton btnChooseFm;
    public static javax.swing.JButton btnChooseUml;
    public static javax.swing.JButton btnClearDict;
    public static javax.swing.JButton btnPrint;
    public static javax.swing.JButton btnQuit;
    public static javax.swing.JButton btnTraceState;
    public static javax.swing.JButton btnTraceTransition;
    public static javax.swing.JButton btnViewFm;
    public static javax.swing.JButton btnViewUml;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JLabel lblTitle;
    public static javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables
}
